<header class="observation"><h1>Observation</h1></header>

<div id="observation-content" class="observation-content">

  <table class="grid sensors detail">
    <thead>
      <tr>
        <th>Monitor</th>
        <th>Server</th>
        <th>Timestamp</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td data-bind="text: ob_mon"></td>
        <td data-bind="text: ob_app"></td>
        <td data-bind="text: ob_received"></td>
      </tr>
    </tbody>
  </table>

  <table class="grid grid-clickable sensors">
    <thead>
      <tr>
        <th>Sensor</th>
        <th>Value</th>
      </tr>
    </thead>
    <tbody data-bind="foreach: sensor_list">
      <tr data-bind="click: click, css: { alert2: onalert() == true }">
        <td data-bind="text: key"></td>
        <td data-bind="text: value"></td>
      </tr>
    </tbody>
  </table>

</div>

    <script>

    function ObservationPayload( _key, _value ) {
      var self = this;

      self.click = function(e) {
        history.pushState( {}, null, '#sensor/' + obvm.id + '/' + self.key );

        $( ".content" ).load( "page/sensor.htm" );

      }

      self.key = _key;
      self.value = _value;
      self.onalert = ko.observable( false );
    }

    function ObViewModel() {
      var self = this;

      self.id = window.location.hash.split( "/" )[1];

      self.ob_app = ko.observable();
      self.ob_mon = ko.observable();
      self.ob_received = ko.observable();

      self.alertIdx = {}
      self.sensor_list = ko.observableArray();
      self.add = function( key, value ) {
        var op = new ObservationPayload( key, value );
        self.sensor_list.push( op );
        console.log( "key", key );
        self.alertIdx[key] = op;
      }

      self.sort = function(left,right) {
        if ( left.onalert() == true ) {
          return -1;
        } else if ( right.onalert() == true ) {
          return 1;
        } else {
          return 0;
        }
      }
    }

    var obvm = new ObViewModel();
    ko.applyBindings( obvm, document.getElementById( 'observation-content' ) );

    $.getJSON( "observationpayload/" + obvm.id, function( _l ) {
      _.each( _l, function(el) {
        obvm.add( el.key, el.value );
      });

      $.getJSON( "alertsfordisplay/" + obvm.id, function( _l ) {
        _.each( _l, function(el) {
          console.log( "el.sensor_key", el.sensor_key );
          obvm.alertIdx[el.sensor_key].onalert( true );

          obvm.sensor_list.sort( obvm.sort );
        });
      });

    });

    $.getJSON( "observation/" + obvm.id, function(row) {
      obvm.ob_app( row['app_key'] );
      obvm.ob_mon( row['mon_key'] );
      obvm.ob_received( moment( row['received'] ).format( "ddd, DD MMM h:MM:ss a") );
    });

    </script>
